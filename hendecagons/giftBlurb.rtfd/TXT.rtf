{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 STIXGeneral-Regular;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11780\viewh17180\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
\pard\pardeftab720\qc

\fs42 \cf0 Rendering Hendecagrams
\fs38 \
\pard\pardeftab720

\fs28 \cf0 \
\pard\pardeftab720\qc

\fs34 \cf0 G4G11 gift from Scott Vorthmann\

\fs28 scott@vorthmann.org
\fs22 \
\pard\pardeftab720

\fs28 \cf0 \
The figure on the reverse of this page is a hendecagon, a regular 11-sided polygon, in combination with all four of its inscribed hendecagrams.  The figure is entirely generated by a Python program.  The program does all its computation using 
\i hendecagon numbers
\i0 , of the form:\
\pard\pardeftab720\qc
\cf0 ( a, b, c, d, e ) = a + b
\f1 \uc0\u952 
\f0  + c
\f1 \uc0\u954  + d\u955  + c
\f0 \uc0\u956 \
\pard\pardeftab720
\cf0 \
where \uc0\u952 , \u954 , \u955 , and \u956  are the irrational lengths of the four diagonals of a hendecagon with unit edge length, and 
\i a
\i0 , 
\i b
\i0 , 
\i c
\i0 , 
\i d
\i0 , and 
\i e
\i0  are integers.  Hendecagon numbers are very natural to use for the coordinates of the vertices of a hendecagon, but it is an 
\i affine regular
\i0  hendecagon, seen below on the left.  By using such coordinates, the program can perform exact integer arithmetic, with no worries about floating point roundoff error.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f2\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 1.tiff \width5420 \height5360
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf0      
\f2\fs24 {{\NeXTGraphic Pasted Graphic 2.tiff \width5380 \height5340
}¬}
\f0\fs28 \
\
When all the corners of all the strips have been computed in this way, the points are rendered to floating point for drawing, including the skew transformation shown above.  You can see more details and run the Python program here:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc
{\field{\*\fldinst{HYPERLINK "http://nbviewer.ipython.org/github/vorth/ipython/blob/master/hendecagons/Hendecagons.ipynb"}}{\fldrslt \cf0 http://tinyurl.com/hendecagrams-g4g11}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc

\f2\fs24 \cf0 {{\NeXTGraphic Pasted Graphic.tiff \width3000 \height2860
}¬}}